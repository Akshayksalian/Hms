package com.hms.dao;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.criteria.Path;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Repository;

import com.hms.entities.Candidates;
import com.hms.entities.Domain;

/*
 * 
 */
@Repository
public class CandidatesDAOImpl implements CandidatesDAO {

	@PersistenceContext
	private EntityManager em;

	@Override
	public void fetchCandidates() {
		
		String file = "D:\\CSVDemo.csv";
		Path pathToFile = Paths.get(file);
		
		try(BufferedReader br = Files.newBufferedReader(pathToFile)) {
			
		} catch (IOException e) {
			e.printStackTrace();
		}

//		ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext("appContext.xml");

//		String line = "";
//		String splitBy = ",";
//		Candidates can = new Candidates();
//		Domain dom = new Domain();
//
//		try {
//			BufferedReader br = new BufferedReader(new FileReader("D:\\CSVDemo.csv"));
//
//			while ((line = br.readLine()) != null) {
//				String[] candidate = line.split(splitBy);
//
//				can.setName(candidate[0]);
//				can.setExp(Integer.parseInt(candidate[1]));
//				can.setCandidate_skills(candidate[2]);
//				can.setEmail(candidate[3]);
//				can.setContact_no(candidate[4]);
//				can.setCompany_name(candidate[5]);
//				can.setCandidates_location(candidate[6]);
////				dom.setDomain_id(Integer.parseInt(candidate[1]));
////				can.setDomain(dom);
//
//			}
//			br.close();
////			context.close();
//		} catch (IOException e) {
//			e.printStackTrace();
//		}
	}

	/*
	 * Get the candidates By Id.
	 */
	@Override
	public Candidates findCandidateById(int id) {
		Candidates candidates = em.find(Candidates.class, id);
		return candidates;
	}

	/*
	 * Get all the candidates present in the table.
	 */
	@Override
	public List<Candidates> findAllCandidates() {
		return em.createQuery("SELECT c FROM Candidates c", Candidates.class).getResultList();
	}

	/*
	 * Add Candidates Details into database.
	 */
	@Override
	public void addCandidates(Candidates candidates) {
		em.persist(candidates);
	}

//	@Override
//	public Candidates updateCandidates(Candidates candidates) {
//		return em.merge(candidates);
//	}

}
